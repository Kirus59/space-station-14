// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using Content.Client.Guidebook.Richtext;
using Content.Shared.SS220.SupaKitchen;
using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.SS220.SupaKitchen.UI.Controls;

/// <summary>
///     Control for embedding a group of recipes into a guidebook.
/// </summary>
[UsedImplicitly, GenerateTypedNameReferences]
public sealed partial class GuideCookingRecipeGroupEmbed : BoxContainer, IDocumentTag
{
    [Dependency] private readonly IPrototypeManager _prototype = default!;

    public GuideCookingRecipeGroupEmbed()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        MouseFilter = MouseFilterMode.Stop;
    }

    public GuideCookingRecipeGroupEmbed(string? recipeGroup, ProtoId<CookingInstrumentTypePrototype>? instrumentType) : this()
    {
        AddCookingRecipes(recipeGroup, instrumentType);
    }

    public bool TryParseTag(Dictionary<string, string> args, [NotNullWhen(true)] out Control? control)
    {
        args.TryGetValue("RecipeGroup", out var recipeGroup);
        args.TryGetValue("InstrumentType", out var instrumentType);

        AddCookingRecipes(recipeGroup, instrumentType);

        control = this;
        return true;
    }

    private void AddCookingRecipes(string? recipeGroup, ProtoId<CookingInstrumentTypePrototype>? instrumentType)
    {
        var prototypes = _prototype.EnumeratePrototypes<CookingRecipePrototype>().Where(r => !r.SecretRecipe);

        if (recipeGroup != null)
            prototypes = prototypes.Where(r => r.RecipeGroup == recipeGroup);

        if (instrumentType != null)
            prototypes = prototypes.Where(r => r.InstrumentType == instrumentType);

        foreach (var recipe in prototypes)
        {
            var embed = new GuideCookingRecipeEmbed(recipe);
            GroupContainer.AddChild(embed);
        }
    }
}
