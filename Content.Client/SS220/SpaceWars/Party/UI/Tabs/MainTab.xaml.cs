using Content.Client.SS220.SpaceWars.Party.UI.CustomControls;
using Content.Shared.SS220.SpaceWars.Party;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.Player;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.SpaceWars.Party.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class MainTab : Control
{
    [Dependency] private readonly IPartyManager _partyManager = default!;
    [Dependency] private readonly IPlayerManager _playerManager = default!;

    private PartyData? _currentParty;

    private Dictionary<PartyUser, PartyUserInfo> _partyUsers = new();
    private InviteInPartyWindow _inviteWindow = new InviteInPartyWindow();

    public MainTab()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        MembersPanel.PanelOverride = new StyleBoxFlat { BackgroundColor = new Color(32, 32, 40) };
        ChatPanel.PanelOverride = new StyleBoxFlat { BackgroundColor = new Color(32, 32, 40) };
        MembersContainer.OnResized += UpdateMembers;
        Update();
    }

    public void Update()
    {
        UpdatePartyInfo();
        UpdateMembers();
        UpdateButtons();
    }

    public void UpdatePartyInfo()
    {
        _currentParty = _partyManager.CurrentParty;
    }

    public void UpdateMembers()
    {
        if (_currentParty == null)
        {
            _partyUsers.Clear();
            PopulateMembersContainer();
            return;
        }

        Dictionary<PartyUser, PartyUserInfo> newDict = new();
        foreach (var user in _currentParty.Members)
        {
            _partyUsers.TryGetValue(user, out var info);
            info ??= new PartyUserInfo();
            UpdatePartyUserInfo(user, info);
            newDict.Add(user, info);
        }

        _partyUsers = newDict;
        PopulateMembersContainer();
    }

    public void UpdateButtons()
    {
        ButtonContainer.RemoveAllChildren();

        var player = _playerManager.LocalSession;
        if (player == null)
            return;

        if (_currentParty == null)
        {
            ButtonContainer.AddChild(NewCreatePartyButton());
        }
        else if (_currentParty.IsLeader(player.UserId))
        {
            ButtonContainer.AddChild(NewDisbandPartyButton());
            ButtonContainer.AddChild(NewInviteInPartyButton());
        }
        else
        {
            ButtonContainer.AddChild(NewLeavePartyButton());
        }
    }

    public void UpdatePartyUserInfo(PartyUser user, PartyUserInfo info)
    {
        info.Populate(user);
        info.Margin = new Thickness(5, 5, 5, 5);
        info.SetNewSize(new System.Numerics.Vector2(MembersContainer.Size.X - 10, 50));
    }

    public Button NewCreatePartyButton()
    {
        var button = new Button();
        button.Text = Loc.GetString("ui-PartyMenu-MainTab-CreatePartyButton");
        button.OnPressed += _ =>
        {
            _partyManager.SendCreatePartyRequest();
        };
        return button;
    }

    public Button NewDisbandPartyButton()
    {
        var button = new Button();
        button.Text = Loc.GetString("ui-PartyMenu-MainTab-DisbandPartyButton");
        button.OnPressed += _ =>
        {
            _partyManager.SendDisbandPartyRequest();
        };
        return button;
    }

    public Button NewLeavePartyButton()
    {
        var button = new Button();
        button.Text = Loc.GetString("ui-PartyMenu-MainTab-LeavePartyButton");
        button.OnPressed += _ =>
        {
            _partyManager.SendLeavePartyRequest();
        };
        return button;
    }

    public Button NewInviteInPartyButton()
    {
        var button = new Button();
        button.Text = Loc.GetString("ui-PartyMenu-MainTab-InviteInPartyButton");
        button.OnPressed += _ =>
        {
            _inviteWindow.OpenCentered();
        };
        return button;
    }

    private void PopulateMembersContainer()
    {
        MembersContainer.RemoveAllChildren();
        foreach (var info in _partyUsers.Values)
            MembersContainer.AddChild(info);
    }
}
