using System.Numerics;
using Content.Client.SS220.SpaceWars.Party.UI.CustomControls;
using Content.Client.SS220.UserInterface.Utility;
using Content.Shared.SS220.SpaceWars.Party;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.SpaceWars.Party.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class IncomingInvitesTab : Control
{
    [Dependency] private readonly IPartyManager _partyManager = default!;

    private readonly QuickConfirmationWindow _confirmationWindow = new();

    public IncomingInvitesTab()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        InvitesPanel.PanelOverride = new StyleBoxFlat { BackgroundColor = new Color(32, 32, 40) };
        _partyManager.OnIncomingInviteAdded += _ => Populate();
        _partyManager.OnIncomingInviteRemoved += _ => Populate();
        ReceiveInvitesCheckbox.OnToggled += button =>
        {
            _partyManager.SetReceiveInvitesStatus(button.Pressed);
        };

        _confirmationWindow.SetSize = new Vector2(400, 80);

        Populate();
    }

    public void Populate()
    {
        InvitesContainer.RemoveAllChildren();
        var invites = _partyManager.IncomingInvites;

        InvitesLabel.Text = Loc.GetString("ui-InviteInPartyWindow-InvitesLabel", ("count", invites.Count));
        if (invites.Count <= 0)
            return;

        foreach (var (id, invite) in invites)
        {
            var control = new IncomingInvitePanel(invite)
            {
                Margin = new Thickness(5)
            };

            control.AcceptButton.OnPressed += _ => AcceptInvite(invite);
            control.DenyButton.OnPressed += _ => _partyManager.DenyInvite(id);

            InvitesContainer.AddChild(control);
        }
    }

    private void AcceptInvite(IncomingPartyInvite invite)
    {
        if (_partyManager.CurrentParty is { } party)
        {
            _confirmationWindow.ClearEvents();

            string message;
            if (party.LocalUserInfo.Role is PartyMemberRole.Leader)
                message = Loc.GetString("ui-incoming-invites-tab-leave-to-another-party-watning-leader");
            else
                message = Loc.GetString("ui-incoming-invites-tab-leave-to-another-party-watning-member");

            _confirmationWindow.SetMessage(message);
            _confirmationWindow.OnConfirmed += () => _partyManager.AcceptInvite(invite.Id);
            _confirmationWindow.OpenCentered();
        }
        else
            _partyManager.AcceptInvite(invite.Id);
    }
}
