
using System.Numerics;
using Content.Client.SS220.SpaceWars.Party.UI.CustomControls;
using Content.Client.SS220.UserInterface.Utility;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.Player;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.SpaceWars.Party.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class ReceivedInvitesTab : Control
{
    [Dependency] private readonly IPartyManager _party = default!;
    [Dependency] private readonly IPlayerManager _player = default!;

    private readonly QuickConfirmationWindow _confirmationWindow = new();
    private readonly Dictionary<PartyInvite, ReceivedInvitePanel> _invitePanels = [];

    public ReceivedInvitesTab()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        InvitesPanel.PanelOverride = new StyleBoxFlat { BackgroundColor = new Color(32, 32, 40) };

        _party.InviteAdded += AddInvite;
        _party.InviteRemoved += RemoveInvite;

        ReceiveInvitesCheckbox.OnToggled += button =>
        {
            _party.SetReceiveInvitesStatus(button.Pressed);
        };

        _confirmationWindow.SetSize = new Vector2(400, 80);

        Refresh();
    }

    public void Refresh()
    {
        InvitesContainer.RemoveAllChildren();
        _invitePanels.Clear();

        foreach (var invite in _party.ExternalInvites)
            AddInvite(invite);
    }

    private void AddInvite(PartyInvite invite)
    {
        if (invite.InviteType is not PartyInviteType.External ||
            invite.Receiver != _player.LocalUser)
            return;

        if (_invitePanels.ContainsKey(invite))
            return;

        var panel = new ReceivedInvitePanel(invite)
        {
            Margin = new Thickness(5)
        };

        InvitesContainer.AddChild(panel);
        _invitePanels.Add(invite, panel);

        UpdateInvitesCountLabel();
    }

    private void RemoveInvite(PartyInvite invite)
    {
        if (invite.InviteType is not PartyInviteType.External ||
            invite.Receiver != _player.LocalUser)
            return;

        if (!_invitePanels.TryGetValue(invite, out var panel))
            return;

        InvitesContainer.RemoveChild(panel);
        _invitePanels.Remove(invite);

        UpdateInvitesCountLabel();
    }

    private void UpdateInvitesCountLabel()
    {
        var count = _invitePanels.Count;
        InvitesCountLabel.Text = Loc.GetString("ui-received-invites-tab-invites-count-label", ("count", count));
    }
}
