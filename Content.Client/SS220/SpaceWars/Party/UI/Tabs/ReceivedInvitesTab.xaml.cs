using System.Linq;
using System.Numerics;
using Content.Client.SS220.SpaceWars.Party.UI.CustomControls;
using Content.Client.SS220.UserInterface.Utility;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.SpaceWars.Party.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class ReceivedInvitesTab : Control
{
    [Dependency] private readonly IPartyManager _party = default!;

    private readonly QuickConfirmationWindow _confirmationWindow = new();

    public ReceivedInvitesTab()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        InvitesPanel.PanelOverride = new StyleBoxFlat { BackgroundColor = new Color(32, 32, 40) };

        _party.InviteAdded += _ => Refresh();
        _party.InviteRemoved += _ => Refresh();
        ReceiveInvitesCheckbox.OnToggled += button =>
        {
            _party.SetReceiveInvitesStatus(button.Pressed);
        };

        _confirmationWindow.SetSize = new Vector2(400, 80);

        Refresh();
    }

    public void Refresh()
    {
        InvitesContainer.DisposeAllChildren();
        var invites = _party.ReceivedInvites;
        var count = invites.Count();

        InvitesCountLabel.Text = Loc.GetString("ui-received-invites-tab-invites-count-label", ("count", count));
        if (count <= 0)
            return;

        foreach (var invite in invites)
        {
            var control = new ReceivedInvitePanel(invite)
            {
                Margin = new Thickness(5)
            };

            InvitesContainer.AddChild(control);
        }
    }
}
