using Content.Shared.SS220.SpaceWars.Party;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using System.Numerics;

namespace Content.Client.SS220.SpaceWars.Party.UI.CustomControls;

[GenerateTypedNameReferences]
public sealed partial class PartyUserInfo : PanelContainer
{
    [Dependency] private readonly IResourceCache _cache = default!;

    private readonly Font _textFont;

    private PartyUser? _user;

    public PartyUserInfo()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        PanelOverride = new StyleBoxFlat { BackgroundColor = new Color(60, 60, 60) };
        _textFont = new VectorFont(_cache.GetResource<FontResource>("/Fonts/NotoSansDisplay/NotoSansDisplay-Regular.ttf"), 11);

        UserNameLabel.FontOverride = _textFont;
        PartyRoleLabel.FontOverride = _textFont;
        ConnectionStatusLabel.FontOverride = _textFont;
        KickButton.Label.FontOverride = _textFont;
    }

    public PartyUserInfo(PartyUser user) : this()
    {
        Populate(user);
    }

    public void Populate(PartyUser user)
    {
        _user = user;
        Populate();
    }

    public void Populate()
    {
        UserNameLabel.Text = _user?.Name;
        PartyRoleLabel.Text = _user == null ? null : GetUserRoleName(_user.Role);
        ConnectionStatusLabel.Text = _user == null
            ? null
            : _user.Connected ? Loc.GetString("ui-PartyUserInfo-Connected") : Loc.GetString("ui-PartyUserInfo-Disconnected");
    }

    public void SetNewSize(Vector2 vector)
    {
        SetSize = vector;

        var firstBoxSize = GetNewSize(FirstBox, vector, 1, 0.5f);
        FirstBox.SetSize = firstBoxSize;

        UserNameLabel.SetSize = GetNewSize(UserNameLabel, firstBoxSize, 0.75f, 1);
        PartyRoleLabel.SetSize = GetNewSize(PartyRoleLabel, firstBoxSize, 0.25f, 1);

        var secondBoxSize = GetNewSize(SecondBox, vector, 1, 0.5f);
        SecondBox.SetSize = secondBoxSize;

        ConnectionStatusLabel.SetSize = GetNewSize(ConnectionStatusLabel, secondBoxSize, 0.5f, 1);
        KickButton.SetSize = GetNewSize(KickButton, secondBoxSize, 0.5f, 1);
    }

    private string GetUserRoleName(PartyRole role)
    {
        return role switch
        {
            PartyRole.Member => Loc.GetString("partyRole-Member"),
            PartyRole.Leader => Loc.GetString("partyRole-Leader"),
            _ => Loc.GetString("partyRole-Unknown")
        };
    }

    private Vector2 GetNewSize(Control targetControl, Vector2 inputVector, float xModifier, float yModifier)
    {
        var xMargin = targetControl.Margin.Left + targetControl.Margin.Right;
        var yMargin = targetControl.Margin.Top + targetControl.Margin.Bottom;
        float x = inputVector.X * xModifier - xMargin;
        float y = inputVector.Y * yModifier - yMargin;
        return new Vector2(x, y);
    }
}
