using Content.Client.SS220.StyleTools;
using Content.Client.Stylesheets;
using Content.Shared.SS220.SpaceWars.Party;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using System.Numerics;

namespace Content.Client.SS220.SpaceWars.Party.UI.CustomControls;

[GenerateTypedNameReferences]
public sealed partial class PartyMemberPanel : PanelContainer
{
    [Dependency] private readonly IResourceCache _cache = default!;
    [Dependency] private readonly IStylesheetManager _stylesheetManager = default!;

    public readonly PartyMember Member;

    private readonly Font _textFont;

    public PartyMemberPanel(PartyMember member)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        Member = member;
        Stylesheet = new PartyUserInfoPanelStyle().Create(_stylesheetManager.SheetNano, _cache);

        PanelOverride = new StyleBoxFlat { BackgroundColor = new Color(60, 60, 60) };
        _textFont = new VectorFont(_cache.GetResource<FontResource>("/Fonts/NotoSansDisplay/NotoSansDisplay-Regular.ttf"), 11);

        UsernameLabel.FontOverride = _textFont;
        PartyRoleLabel.FontOverride = _textFont;
        ConnectionStatusLabel.FontOverride = _textFont;
        ConnectionStatusIcon.TextureScale = new Vector2(0.6f, 0.6f);

        Refresh();
    }

    public void Refresh()
    {
        UsernameLabel.Text = Member.Username;
        PartyRoleLabel.Text = SharedPartyMember.GetPartyMemberRoleName(Member.Role);

        var roleBackground = GetRoleColor(Member.Role);
        if (roleBackground != null)
            PartyRolePanel.PanelOverride = new StyleBoxFlat() { BackgroundColor = roleBackground.Value };

        ConnectionStatusIcon.ModulateSelfOverride = Member.Connected ? Color.Green : Color.Red;
        ConnectionStatusLabel.Text = Member.Connected ? Loc.GetString("ui-party-member-panel-member-connected")
            : Loc.GetString("ui-party-member-panel-member-disconnected");
    }

    private static Color? GetRoleColor(PartyMemberRole role)
    {
        return role switch
        {
            PartyMemberRole.Member => new Color(52, 101, 131),
            PartyMemberRole.Host => new Color(146, 122, 25),
            _ => null
        };
    }
}

public sealed class PartyUserInfoPanelStyle : QuickStyle
{
    protected override void CreateRules()
    {
        Builder.Element<TextureRect>().Class("Circle")
                .Prop("texture", Tex("/Textures/SS220/Interface/Nano/circle.svg.png"));
    }
}
