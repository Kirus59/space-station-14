using Content.Client.SS220.StyleTools;
using Content.Client.Stylesheets;
using Content.Shared.SS220.SpaceWars.Party;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using System.Numerics;

namespace Content.Client.SS220.SpaceWars.Party.UI.CustomControls;

[GenerateTypedNameReferences]
public sealed partial class PartyUserInfoPanel : PanelContainer
{
    [Dependency] private readonly IResourceCache _cache = default!;
    [Dependency] private readonly IStylesheetManager _stylesheetManager = default!;

    private readonly Font _textFont;

    public PartyUserInfoPanel()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        Stylesheet = new PartyUserInfoPanelStyle().Create(_stylesheetManager.SheetNano, _cache);

        PanelOverride = new StyleBoxFlat { BackgroundColor = new Color(60, 60, 60) };
        _textFont = new VectorFont(_cache.GetResource<FontResource>("/Fonts/NotoSansDisplay/NotoSansDisplay-Regular.ttf"), 11);

        UserNameLabel.FontOverride = _textFont;
        PartyRoleLabel.FontOverride = _textFont;
        ConnectionStatusLabel.FontOverride = _textFont;
        ConnectionStatusIcon.TextureScale = new Vector2(0.6f, 0.6f);

        SetConnectionStatus(false);
    }

    public PartyUserInfoPanel(string? username, bool conected, PartyMemberRole role = PartyMemberRole.None) : this()
    {
        Populate(username, conected, role);
    }

    public PartyUserInfoPanel(PartyMember userInfo) : this(userInfo.Name, userInfo.Connected, userInfo.Role) { }

    public void Populate(PartyMember userInfo)
    {
        Populate(userInfo.Name, userInfo.Connected, userInfo.Role);
    }

    public void Populate(string? username, bool conected, PartyMemberRole role = PartyMemberRole.None)
    {
        UserNameLabel.Text = username;
        PartyRoleLabel.Text = GetRoleName(role);

        var roleBackground = GetRoleColor(role);
        if (roleBackground != null)
            PartyRolePanel.PanelOverride = new StyleBoxFlat() { BackgroundColor = roleBackground.Value };

        SetConnectionStatus(conected);
    }

    private string GetRoleName(PartyMemberRole role)
    {
        return role switch
        {
            PartyMemberRole.Member => Loc.GetString("partyRole-Member"),
            PartyMemberRole.Leader => Loc.GetString("partyRole-Leader"),
            _ => Loc.GetString("partyRole-Unknown")
        };
    }

    private Color? GetRoleColor(PartyMemberRole role)
    {
        return role switch
        {
            PartyMemberRole.Member => new Color(52, 101, 131),
            PartyMemberRole.Leader => new Color(146, 122, 25),
            _ => null
        };
    }

    private void SetConnectionStatus(bool conected)
    {
        ConnectionStatusIcon.ModulateSelfOverride = conected ? Color.Green : Color.Red;
        ConnectionStatusLabel.Text = conected ? Loc.GetString("ui-PartyUserInfo-Connected") : Loc.GetString("ui-PartyUserInfo-Disconnected");
    }
}

public sealed class PartyUserInfoPanelStyle : QuickStyle
{
    protected override void CreateRules()
    {
        Builder.Element<TextureRect>().Class("Circle")
                .Prop("texture", Tex("/Textures/SS220/Interface/Nano/circle.svg.png"));
    }
}
