using Content.Shared.SS220.SpaceWars.Party;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using System.Diagnostics.CodeAnalysis;

namespace Content.Client.SS220.SpaceWars.Party.UI.CustomControls;

[GenerateTypedNameReferences]
public sealed partial class PartySettingsPanel : PanelContainer
{
    [Dependency] private readonly IPartyManager _partyManager = default!;
    [Dependency] private readonly ILocalizationManager _localizationManager = default!;

    private Dictionary<string, Control> _settings = new();

    public PartySettingsPanel()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    public void Update()
    {
        SettingsBox.RemoveAllChildren();
        AddLineEditOption("MaxMembers", "20");
    }

    public bool TryGetSettingControl(string name, [NotNullWhen(true)] out Control? control)
    {
        return _settings.TryGetValue(name, out control);
    }

    public PartySettingsState GetSettingsState()
    {
        uint maxMembers = 0;
        if (TryGetSettingControl("MaxMembers", out var control) &&
            control is LineEdit lineEdit)
        {
            uint.TryParse(lineEdit.Text, out maxMembers);
        }

        return new PartySettingsState(maxMembers);
    }

    private void AddLineEditOption(string name, string defaultText)
    {
        var box = new BoxContainer()
        {
            Orientation = BoxContainer.LayoutOrientation.Horizontal,
            HorizontalExpand = true
        };

        var label = new Label()
        {
            Text = Loc.GetString($"ui-PartySettings-LineEdit-{name}-label"),
        };
        box.AddChild(label);

        var edit = new LineEdit
        {
            Text = defaultText,
            PlaceHolder = _localizationManager.TryGetString($"ui-PartySettings-LineEdit-{name}-placeholder", out var placeHolder) ? placeHolder : null
        };
        box.AddChild(edit);

        SettingsBox.AddChild(box);
        _settings.Add(name, box);
    }
}
